apply plugin: 'application'
apply plugin: 'java'

mainClassName = 'cmanager.Main'
project.ext.ocOkapiPropertiesFile = projectDir.getPath() + "${File.separator}oc_okapi.properties"
sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '0.2.38'

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

task OcOkapiKeys(type: Copy) {
    assert file(project.ocOkapiPropertiesFile).exists() : project.ocOkapiPropertiesFile + ' file missing. Please follow the instructions in README.md'
    outputs.files 'src/cmanager/OKAPIKeys.java'
    Properties properties = new Properties()
    File propertiesFile = new File(project.ocOkapiPropertiesFile)
    properties.load(propertiesFile.newDataInputStream())
    from('templates') {
        exclude '**/*.properties', 'Version.java'
    }
    expand(
        oc_okapi_de_consumer_key: properties.getProperty('oc_okapi_de_consumer_key'),
        oc_okapi_de_consumer_secret: properties.getProperty('oc_okapi_de_consumer_secret'),
        oc_okapi_nl_consumer_key: properties.getProperty('oc_okapi_nl_consumer_key'),
        oc_okapi_nl_consumer_secret: properties.getProperty('oc_okapi_nl_consumer_secret'),
        oc_okapi_pl_consumer_key: properties.getProperty('oc_okapi_pl_consumer_key'),
        oc_okapi_pl_consumer_secret: properties.getProperty('oc_okapi_pl_consumer_secret'),
        oc_okapi_ro_consumer_key: properties.getProperty('oc_okapi_ro_consumer_key'),
        oc_okapi_ro_consumer_secret: properties.getProperty('oc_okapi_ro_consumer_secret'),
        oc_okapi_uk_consumer_key: properties.getProperty('oc_okapi_uk_consumer_key'),
        oc_okapi_uk_consumer_secret: properties.getProperty('oc_okapi_uk_consumer_secret'),
        oc_okapi_us_consumer_key: properties.getProperty('oc_okapi_us_consumer_key'),
        oc_okapi_us_consumer_secret: properties.getProperty('oc_okapi_us_consumer_secret')
    )
    into 'src/cmanager'
}

task Version(type: Copy) {
    outputs.files 'src/cmanager/Version.java'
    from('templates') {
        exclude '**/*.properties', 'OKAPIKeys.java'
    }
    expand(
        version: version
    )
    into 'src/cmanager'
}

compileJava.dependsOn OcOkapiKeys, Version

clean.doFirst {
    delete 'src/cmanager/OKAPIKeys.java'
    delete 'src/cmanager/Version.java'
}

repositories {
    mavenCentral()
    maven {
        url 'https://josm.openstreetmap.de/nexus/content/groups/public/'
    }
}

dependencies {
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.4'
    compile group: 'com.github.scribejava', name: 'scribejava-core', version: '3.1.0'
    compile group: 'org.openstreetmap.jmapviewer', name: 'jmapviewer', version: '2.0'
}

jar {
    baseName = 'cm'
    manifest { attributes 'Main-Class': mainClassName }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}
