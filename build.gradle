plugins {
    id 'com.github.ben-manes.versions' version '0.14.0'
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'com.github.ben-manes.versions'


mainClassName = 'cmanager.Main'
project.ext.ocOkapiPropertiesFile = projectDir.getPath() + "${File.separator}oc_okapi.properties"
sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '0.2.45'

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }

    test {
        java {
            srcDirs = ["test"]
        }
    }
}

task OcOkapiKeys(type: Copy) {
    assert file(project.ocOkapiPropertiesFile).exists() : project.ocOkapiPropertiesFile + ' file missing. Please follow the instructions in README.md'
    outputs.files 'src/cmanager/okapi/ConsumerKeys.java'
    Properties properties = new Properties()
    File propertiesFile = new File(project.ocOkapiPropertiesFile)
    properties.load(propertiesFile.newDataInputStream())
    from('templates') {
        exclude '**/*.properties', 'TestClientCredentials.java', 'Version.java'
    }
    expand(
        oc_okapi_de_consumer_key: properties.getProperty('oc_okapi_de_consumer_key'),
        oc_okapi_de_consumer_secret: properties.getProperty('oc_okapi_de_consumer_secret')
    )
    into 'src/cmanager/okapi'
}

task OcTestClientLogin(type: Copy) {
    assert file(project.ocOkapiPropertiesFile).exists() : project.ocOkapiPropertiesFile + ' file missing. Please follow the instructions in README.md'
    outputs.files 'test/cmanager/okapi/helper/TestClientCredentials.java'
    Properties properties = new Properties()
    File propertiesFile = new File(project.ocOkapiPropertiesFile)
    properties.load(propertiesFile.newDataInputStream())
    from('templates') {
        exclude '**/*.properties', 'ConsumerKeys.java', 'Version.java'
    }
    expand(
        oc_test_client_username: properties.getProperty('oc_test_client_username'),
        oc_test_client_password: properties.getProperty('oc_test_client_password')
    )
    into 'test/cmanager/okapi/helper'
}

task Version(type: Copy) {
    outputs.files 'src/cmanager/global/Version.java'
    from('templates') {
        exclude '**/*.properties', 'ConsumerKeys.java', 'TestClientCredentials.java'
    }
    expand(
        version: version
    )
    into 'src/cmanager/global'
}

compileJava.dependsOn OcOkapiKeys, Version
compileTestJava.dependsOn OcTestClientLogin

clean.doFirst {
    delete 'src/cmanager/okapi/ConsumerKeys.java'
    delete 'src/cmanager/global/Version.java'
    delete 'test/cmanager/okapi/helper/TestClientCredentials.java'
}

repositories {
    mavenCentral()
    maven {
        url 'https://josm.openstreetmap.de/nexus/content/groups/public/'
    }
}

dependencies {
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.9'
    compile group: 'com.github.scribejava', name: 'scribejava-core', version: '4.1.0'
    compile group: 'org.openstreetmap.jmapviewer', name: 'jmapviewer', version: '2.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'

    testCompile 'junit:junit:4.12'
}

jar {
    baseName = 'cm'
    manifest { attributes 'Main-Class': mainClassName }

    from('.') {
        include 'ressources/images/*.jpg'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
